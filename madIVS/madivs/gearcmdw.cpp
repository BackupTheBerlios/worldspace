//=======================================================================

//@V@:Note: This file generated by vgen V1.04 (10:25:37 22 Jun 1998).

//	gearcmdw.cpp:	Source for gearCmdWindow class

//=======================================================================



#include <v/vnotice.h>	// for vNoticeDialog

#include <v/vkeys.h>	// to map keysi

#include <v/vutil.h>

#include <v/vfilesel.h>

#include <v/vicon.h>


#include "gearcmdw.h"	// our header

#include "globales.h"

#include "plugins.h"

#include <stdio.h>






plugin_info *plugins;

extern modelo *model;



//	Start defines for the main window with 100



//@V@:BeginIDs

    enum {

	m_FirstCmd = 100, // Dummy Command

	cmdAuxTimer,	// AuxTimer

	blkLast		// Last item

      };

//@V@:EndIDs



//@V@:BeginPulldownMenu FileMenu

    static vMenu FileMenu[] =

      {

	{"&Importar...", M_Open, isSens, notChk, noKeyLbl, noKey, noSub},

	{"&Exportar", M_SaveAs, isSens, notChk, noKeyLbl, noKey, noSub},

	{"&Importar textura...", M_Open_T, isSens, notChk, noKeyLbl, noKey, noSub},

	{"-", M_Line, notSens, notChk, noKeyLbl, noKey, noSub},

	{"&Salir", M_Exit, isSens, notChk, noKeyLbl, noKey, noSub},

	{NULL}

      };

//@V@:EndPulldownMenu



//@V@:BeginPulldownMenu EditMenu

    static vMenu VerMenu[] =

      {

	{"&Wireframe", M_T_Wire, isSens, notChk, noKeyLbl, noKey, noSub},
	{"&Textura", M_T_Tex, isSens, notChk, noKeyLbl, noKey, noSub},
	{"&Solido", M_T_Sol, isSens, notChk, noKeyLbl, noKey, noSub},

	{NULL}

      };

//@V@:EndPulldownMenu



//@V@:BeginMenu StandardMenu

    static vMenu StandardMenu[] =

      {

	{"&Fichero", M_Ficheros, isSens, notUsed, notUsed, noKey, &FileMenu[0]},
	{"&Ver", M_Ver, isSens, notUsed, notUsed, noKey, &VerMenu[0]},

	{NULL}

      };

//@V@:EndMenu



//@V@:BeginCmdPane ToolBar





//vbm24
#define c24_height 16
#define c24_width 16
#define c24_depth 24
    static unsigned char c24_bits[] =
  "5.\335>7\346?8\347?8\347?8\347?8\347?8\347?8\347?8\347?8\347?8\347?8\347"
  "?8\347?8\347?8\3476/\3362+\332\223\221\300\243\242\273\243\242\273\243\242"
  "\273\243\242\273\243\242\273\243\242\273\243\242\273\243\242\273\243\242"
  "\273\243\242\273\243\242\273\243\242\273\220\216\275\33\24\3032+\332\241"
  "\240\271\264\264\264\264\264\264\264\264\264\264\264\264\264\264\264\264"
  "\264\264\251\251\251BBB\200\200\200\264\264\264\264\264\264\264\264\264\236"
  "\235\266\31\22\3012+\332\241\240\271\264\264\264\264\264\264\264\264\264"
  "\264\264\264\264\264\264\264\264\264,,,\36\36\36""777\264\264\264\264\264"
  "\264\264\264\264\236\235\266\31\22\3012+\332\241\240\271\264\264\264\264"
  "\264\264\264\264\264\264\264\264ooo,,,\0\0\0""444\232\232\232;;;\264\264"
  "\264\264\264\264\236\235\266\31\22\3012+\332\241\240\271\264\264\264\264"
  "\264\264\264\264\264kkk;;;\251\251\251\26\26\26,,,gggBBB\226\226\226\264"
  "\264\264\236\235\266\31\22\3012+\332\241\240\271\264\264\264\264\264\264"
  "ooo;;;\245\245\245kkk\\\\\\\245\245\245;;;\213\213\213BBB\260\260\260\236"
  "\235\266\31\22\3012+\332\241\240\271\264\264\264zzz,,,\251\251\251\264\264"
  "\264NNN\264\264\264\264\264\264ooo,,,;;;\232\232\232\236\235\266\31\22\301"
  "2+\332\7\6\37\13\13\13NNN\264\264\264\264\264\264\232\232\232,,,\264\264"
  "\264\264\264\264\264\264\264zzz\0\0\0""444\236\235\266\31\22\3012+\33232"
  "L)))\264\264\264\264\264\264\264\264\264JJJ~~~\264\264\264\264\264\264\264"
  "\264\264\264\264\264ooo\17\17\17\32\31""2\31\22\3012+\332\241\240\271JJJ"
  "\251\251\251\264\264\264\217\217\217777\264\264\264\264\264\264\264\264\264"
  "\242\242\242```NNN!!!\32\31""2\31\22\3012+\332\241\240\271oooggg\264\264"
  "\264FFF\200\200\200\264\264\264\264\264\264\\\\\\%%%ggg\264\264\264\264\264"
  "\264\236\235\266\31\22\3012+\332\241\240\271\232\232\232ggggggJJJggg,,,N"
  "NN\245\245\245\264\264\264\264\264\264\264\264\264\264\264\264\236\235\266"
  "\31\22\3012+\332\241\240\271\232\232\232\17\17\17\17\17\17;;;~~~\232\232"
  "\232\264\264\264\264\264\264\264\264\264\264\264\264\264\264\264\264\264"
  "\264\236\235\266\31\22\3012+\332\215\213\272\206\205\236\2\1\32.-F\225\224"
  "\255\234\233\264\234\233\264\234\233\264\234\233\264\234\233\264\234\233"
  "\264\234\233\264\234\233\264\211\207\266\30\21\300)\"\321\17\10\267\15\6"
  "\265\15\6\265\15\6\265\15\6\265\15\6\265\15\6\265\15\6\265\15\6\265\15\6"
  "\265\15\6\265\15\6\265\15\6\265\15\6\265\20\11\270";

    static vIcon icono(&c24_bits[0], c24_height, c24_width,
        c24_depth);



    static CommandObject ToolBar[] =

      {

	{C_IconButton,M_T_Wire,0,"Wireframe",&icono,CA_None,isSens,NoFrame,0,0},
  {C_Button,M_T_Sol,0,"Sólido",NoList,CA_None,isSens,NoFrame,0,0},
  {C_Button,M_T_Tex,0,"Textura",NoList,CA_None,isSens,NoFrame,0,0},

	{C_EndOfList,0,0,0,0,CA_None,0,0,0}

      };

//@V@:EndCmdPane



//====================>>> gearAuxTimer::TimerTick <<<====================

  void gearAuxTimer::TimerTick()

  {

	cmdw->WindowCommand(cmdAuxTimer, cmdAuxTimer, C_Button); // update clock

  }



//====================>>> gearCmdWindow::gearCmdWindow <<<====================

  gearCmdWindow::gearCmdWindow(char* name, int width, int height) :

    vCmdWindow(name, width, height)

  {
  char msg[1024];
  vNoticeDialog note(this);


    UserDebug1(Constructor,"gearCmdWindow::gearCmdWindow(%s) Constructor\n",name)



    // The Menu Bar

    gearMenu = new vMenuPane(StandardMenu);

    AddPane(gearMenu);



    // The Command Pane

    gearCmdPane = new vCommandPane(ToolBar);

    AddPane(gearCmdPane);



    // The Canvas

    gearCanvas = new gearOGLCanvasPane;

    AddPane(gearCanvas);



    _auxTimer = new gearAuxTimer(this);	// create aux timer

    _auxTimer->TimerSet(30);		// 30 ms second intervals

    // Associated dialogs


    strcpy(msg,RUNPATH);
    strcat(msg,"plugins");
    if (buscar_plugins(msg,plugins)!=1) {
      sprintf(msg,"No se encontró ningún plugin");
      note.Notice(msg);
//    exit (1);
    }
        



    

    // Show Window



    ShowWindow();

    WindowCommand(cmdAuxTimer,cmdAuxTimer,C_Button);	// update clock

  }





//====================>>> gearCmdWindow::~gearCmdWindow <<<====================

  gearCmdWindow::~gearCmdWindow()

  {



    UserDebug(Destructor,"gearCmdWindow::~gearCmdWindow() destructor\n")



    // Now put a delete for each new in the constructor.



    delete gearMenu;

    delete gearCanvas;

    delete gearCmdPane;

    _auxTimer->TimerStop();	// end it

    delete _auxTimer;	// free it

  }



//====================>>> gearCmdWindow::KeyIn <<<====================

  void gearCmdWindow::KeyIn(vKey keysym, unsigned int shift)

  {

    vBeep();

    vCmdWindow::KeyIn(keysym, shift);

  }



//====================>>> gearCmdWindow::WindowCommand <<<====================

  void gearCmdWindow::WindowCommand(ItemVal id, ItemVal val, CmdType cType)

  {

    // Default: route menu and toolbar commands here





    UserDebug1(CmdEvents,"gearCmdWindow:WindowCommand(%d)\n",id)



    switch (id)

      {





	//@V@:Case M_Open

	case M_Open:

	  {

      char fich_imp[1024]="";

      vFileSelect importar(this);
      char msg[1024];
      vNoticeDialog note(this);


      int indice=0;

	  importar.FileSelect("Importar fichero...",fich_imp,1023,extensiones,indice);
      if (importar_modelo(indice,fich_imp)==1)
            modelo_cargado=1;
      
      else {
            sprintf(msg,"No se pudo importar %s",fich_imp);
            note.Notice(msg);
            modelo_cargado=0;
      }
            



	    break;

	  }	//@V@:EndCase



	//@V@:Case M_Save

	case M_Save:

	  {

	    vNoticeDialog note(this);

	    note.Notice("Save");

	    break;

	  }	//@V@:EndCase



	//@V@:Case M_SaveAs

	case M_SaveAs:

	  {

	    vNoticeDialog note(this);

	    note.Notice("Save As");

	    break;

	  }	//@V@:EndCase



	//@V@:Case M_CloseFile

	case M_T_Wire:

	  {

      modo_dibujo=1;    //Wireframe
	    break;

	  }	//@V@:EndCase
	case M_T_Sol:

	  {

      modo_dibujo=0;    //Wireframe
	    break;

	  }	//@V@:EndCase




	//@V@:Case M_Exit

	case M_Exit:

	  {



	    theApp->Exit();

	    break;


	  }	//@V@:EndCase



	//@V@:Case M_Cut

	case M_Cut:

	  {

	    vNoticeDialog note(this);

	    note.Notice("Cut");

	    break;

	  }	//@V@:EndCase



	//@V@:Case M_Copy

	case M_Copy:

	  {

	    vNoticeDialog note(this);

	    note.Notice("Copy");

	    break;

	  }	//@V@:EndCase



	//@V@:Case M_Paste

	case M_Paste:

	  {

	    vNoticeDialog note(this);

	    note.Notice("Paste");

	    break;

	  }	//@V@:EndCase



	//@V@:Case auxTimer

	case cmdAuxTimer:	// Event from aux timer

	  {

	    gearCanvas->TimerAnimate();

	    break;

	  }	//@V@:EndCase

	default:		// route unhandled commands up

	  {

	    vCmdWindow::WindowCommand(id, val, cType);

	    break;

	  }

      }

  }

